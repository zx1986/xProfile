# Zsh runtime configuration
#ENABLE_CORRECTION="true"
#CASE_SENSITIVE="true"
HYPHEN_INSENSITIVE="true"
COMPLETION_WAITING_DOTS="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"
HIST_STAMPS="yyyy-mm-dd"
HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=$HISTSIZE

# Spaceship theme configuration
SPACESHIP_PROMPT_ADD_NEWLINE=true
SPACESHIP_PROMPT_SEPARATE_LINE=true
#SPACESHIP_CHAR_SYMBOL="‚ùØ"
#SPACESHIP_CHAR_SUFFIX=" "
SPACESHIP_VI_MODE_SHOW=true
SPACESHIP_USER_SHOW=true
SPACESHIP_TIME_SHOW=true
SPACESHIP_KUBECTL_SHOW=true
SPACESHIP_KUBECTL_VERSION_SHOW=false
SPACESHIP_AWS_SHOW=true
SHOW_AWS_PROMPT=false
SPACESHIP_PROMPT_ORDER=(
  time          # Time stamps section
  user          # Username section
  dir           # Current directory section
  host          # Hostname section
  git           # Git section (git_branch + git_status)
  # hg          # Mercurial section (hg_branch  + hg_status)
  package       # Package version
  node          # Node.js section
  ruby          # Ruby section
  # elixir      # Elixir section
  # xcode       # Xcode section
  # swift       # Swift section
  golang        # Go section
  php           # PHP section
  # rust        # Rust section
  # haskell     # Haskell Stack section
  # julia       # Julia section
  docker        # Docker section
  aws           # Amazon Web Services section
  # venv        # virtualenv section
  # conda       # conda virtualenv section
  pyenv         # Pyenv section
  # dotnet      # .NET section
  # ember       # Ember.js section
  kubectl       # Kubectl context section
  terraform     # Terraform workspace section
  exec_time     # Execution time
  line_sep      # Line break
  # battery     # Battery level and status
  vi_mode       # Vi-mode indicator
  jobs          # Background jobs indicator
  exit_code     # Exit code section
  char          # Prompt character
)

# Custom environment variables
[ -f ~/.env ] && source ~/.env

# asdf
#source $(brew --prefix asdf)/asdf.sh

# Fuck
thefuck() {
  eval "$(command thefuck --alias)"
}

# https://explainshell.com
explain () {
  if [ "$#" -eq 0 ]; then
    while read  -p "Command: " cmd; do
      curl -Gs "https://www.mankier.com/api/explain/?cols="$(tput cols) --data-urlencode "q=$cmd"
    done
    echo "Bye!"
  elif [ "$#" -eq 1 ]; then
    curl -Gs "https://www.mankier.com/api/explain/?cols="$(tput cols) --data-urlencode "q=$1"
  else
    echo "Usage"
    echo "explain                  interactive mode."
    echo "explain 'cmd -o | ...'   one quoted command to explain it."
  fi
}

# Git
function gi() { curl -L -s https://www.gitignore.io/api/$@ ;}

# awless
#source <(awless completion zsh)

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# z
[ -f /usr/local/etc/profile.d/z.sh ] && source /usr/local/etc/profile.d/z.sh

# Kubernetes
kcdebug() { kubectl run -i --rm --tty debug --image=alpine --restart=Never -- sh }
#source <(kubectl completion zsh)

# Helm
if [ $commands[helm] ]; then
  source <(helm completion zsh)
fi

# iTerm
[ -f ~/.iterm2_shell_integration.zsh ] && source ~/.iterm2_shell_integration.zsh

# Custom Alias
[ -f ~/.aliases ] && source ~/.aliases
